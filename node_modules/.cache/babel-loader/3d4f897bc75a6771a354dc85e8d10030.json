{"ast":null,"code":"var _jsxFileName = \"/home/dereck/Udemy/React/MERN/taskmanager/src/context/tasks/taskState.js\";\nimport React, { useReducer } from 'react';\nimport taskContext from './taskContex';\nimport taskReducer from './taskReducer';\n\nconst TaskState = props => {\n  const initialSatate = {\n    tasks: [{\n      name: 'Example',\n      state: true,\n      projectId: 1\n    }, {\n      name: 'Example 2',\n      state: false,\n      projectId: 2\n    }]\n  };\n  const [state, dispatch] = useReducer(taskReducer, initialSatate);\n  return /*#__PURE__*/React.createElement(taskContext.Provider, {\n    value: {\n      tasks: state.tasks\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default TaskState;","map":{"version":3,"sources":["/home/dereck/Udemy/React/MERN/taskmanager/src/context/tasks/taskState.js"],"names":["React","useReducer","taskContext","taskReducer","TaskState","props","initialSatate","tasks","name","state","projectId","dispatch","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,aAAa,GAAG;AACpBC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,IAAI,EAAE,SADR;AAEEC,MAAAA,KAAK,EAAE,IAFT;AAGEC,MAAAA,SAAS,EAAE;AAHb,KADK,EAML;AACEF,MAAAA,IAAI,EAAE,WADR;AAEEC,MAAAA,KAAK,EAAE,KAFT;AAGEC,MAAAA,SAAS,EAAE;AAHb,KANK;AADa,GAAtB;AAeA,QAAM,CAACD,KAAD,EAAQE,QAAR,IAAoBV,UAAU,CAACE,WAAD,EAAcG,aAAd,CAApC;AAEA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAEE,KAAK,CAACF;AADR,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGF,KAAK,CAACO,QAJT,CADF;AAQD,CA1BD;;AA4BA,eAAeR,SAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport taskContext from './taskContex';\nimport taskReducer from './taskReducer';\n\nconst TaskState = (props) => {\n  const initialSatate = {\n    tasks: [\n      {\n        name: 'Example',\n        state: true,\n        projectId: 1,\n      },\n      {\n        name: 'Example 2',\n        state: false,\n        projectId: 2,\n      },\n    ],\n  };\n\n  const [state, dispatch] = useReducer(taskReducer, initialSatate);\n\n  return (\n    <taskContext.Provider\n      value={{\n        tasks: state.tasks,\n      }}>\n      {props.children}\n    </taskContext.Provider>\n  );\n};\n\nexport default TaskState;\n"]},"metadata":{},"sourceType":"module"}