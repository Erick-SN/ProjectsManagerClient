{"ast":null,"code":"import { PROJECT_TASKS, ADD_NEW_TASK, VALIDATE_FORM_TASK, DELETE_TASK, CURREENT_TASK, UPDATE_TASK, CLEAN } from '../../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case PROJECT_TASKS:\n      return { ...state,\n        projectTask: action.payload\n      };\n\n    case ADD_NEW_TASK:\n      return { ...state,\n        projectTask: [action.payload, ...state.projectTask],\n        error: false\n      };\n\n    case VALIDATE_FORM_TASK:\n      return { ...state,\n        error: true\n      };\n\n    case DELETE_TASK:\n      return { ...state,\n        projectTask: state.projectTask.filter(task => task._id !== action.payload)\n      };\n\n    case UPDATE_TASK:\n      return { ...state,\n        projectTask: state.projectTask.map(task => task._id === action.payload._id ? action.payload : task)\n      };\n\n    case CURREENT_TASK:\n      return { ...state,\n        selectedTask: action.payload\n      };\n\n    case CLEAN:\n      return { ...state,\n        selectedTask: null\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/dereck/Udemy/React/MERN/taskmanager/client/src/context/tasks/taskReducer.js"],"names":["PROJECT_TASKS","ADD_NEW_TASK","VALIDATE_FORM_TASK","DELETE_TASK","CURREENT_TASK","UPDATE_TASK","CLEAN","state","action","type","projectTask","payload","error","filter","task","_id","map","selectedTask"],"mappings":"AAAA,SACEA,aADF,EAEEC,YAFF,EAGEC,kBAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,WANF,EAOEC,KAPF,QAQO,aARP;AAUA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,aAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELG,QAAAA,WAAW,EAAEF,MAAM,CAACG;AAFf,OAAP;;AAIF,SAAKV,YAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELG,QAAAA,WAAW,EAAE,CAACF,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAAK,CAACG,WAA1B,CAFR;AAGLE,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAKV,kBAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAYK,QAAAA,KAAK,EAAE;AAAnB,OAAP;;AACF,SAAKT,WAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELG,QAAAA,WAAW,EAAEH,KAAK,CAACG,WAAN,CAAkBG,MAAlB,CACVC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACG,OADnB;AAFR,OAAP;;AAMF,SAAKN,WAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELG,QAAAA,WAAW,EAAEH,KAAK,CAACG,WAAN,CAAkBM,GAAlB,CAAuBF,IAAD,IACjCA,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACG,OAAP,CAAeI,GAA5B,GAAkCP,MAAM,CAACG,OAAzC,GAAmDG,IADxC;AAFR,OAAP;;AAMF,SAAKV,aAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYU,QAAAA,YAAY,EAAET,MAAM,CAACG;AAAjC,OAAP;;AACF,SAAKL,KAAL;AACE,aAAO,EAAE,GAAGC,KAAL;AAAYU,QAAAA,YAAY,EAAE;AAA1B,OAAP;;AACF;AACE,aAAOV,KAAP;AAjCJ;AAmCD,CApCD","sourcesContent":["import {\n  PROJECT_TASKS,\n  ADD_NEW_TASK,\n  VALIDATE_FORM_TASK,\n  DELETE_TASK,\n  CURREENT_TASK,\n  UPDATE_TASK,\n  CLEAN,\n} from '../../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case PROJECT_TASKS:\n      return {\n        ...state,\n        projectTask: action.payload,\n      };\n    case ADD_NEW_TASK:\n      return {\n        ...state,\n        projectTask: [action.payload, ...state.projectTask],\n        error: false,\n      };\n    case VALIDATE_FORM_TASK:\n      return { ...state, error: true };\n    case DELETE_TASK:\n      return {\n        ...state,\n        projectTask: state.projectTask.filter(\n          (task) => task._id !== action.payload,\n        ),\n      };\n    case UPDATE_TASK:\n      return {\n        ...state,\n        projectTask: state.projectTask.map((task) =>\n          task._id === action.payload._id ? action.payload : task,\n        ),\n      };\n    case CURREENT_TASK:\n      return { ...state, selectedTask: action.payload };\n    case CLEAN:\n      return { ...state, selectedTask: null };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}