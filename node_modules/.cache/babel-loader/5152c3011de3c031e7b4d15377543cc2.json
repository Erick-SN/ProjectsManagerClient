{"ast":null,"code":"var _jsxFileName = \"/home/dereck/Udemy/React/MERN/taskmanager/client/src/context/auth/authSatate.js\";\nimport React, { useReducer } from 'react';\nimport authContext from './authContext';\nimport authReducer from './authReducer';\nimport axiosClient from '../../config/axios';\nimport { REGISTER_SUCCESS, REGISTER_ERROR, GET_USER, LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT } from '../../types/index';\n\nconst AuthState = props => {\n  const initialSatate = {\n    token: localStorage.getItem('token'),\n    auth: null,\n    user: null,\n    message: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialSatate);\n\n  const userRegister = async data => {\n    try {\n      const response = await axiosClient.post('/api/users', data);\n      console.log(response.data);\n      dispatch({\n        type: REGISTER_SUCCESS\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: REGISTER_ERROR,\n        payload: response.data\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(authContext.Provider, {\n    value: {\n      token: state.token,\n      auth: state.auth,\n      user: state.user,\n      message: state.message,\n      userRegister\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/home/dereck/Udemy/React/MERN/taskmanager/client/src/context/auth/authSatate.js"],"names":["React","useReducer","authContext","authReducer","axiosClient","REGISTER_SUCCESS","REGISTER_ERROR","GET_USER","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","AuthState","props","initialSatate","token","localStorage","getItem","auth","user","message","state","dispatch","userRegister","data","response","post","console","log","type","error","payload","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SACEC,gBADF,EAEEC,cAFF,EAGEC,QAHF,EAIEC,aAJF,EAKEC,aALF,EAMEC,MANF,QAOO,mBAPP;;AAQA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,aAAa,GAAG;AACpBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADa;AAEpBC,IAAAA,IAAI,EAAE,IAFc;AAGpBC,IAAAA,IAAI,EAAE,IAHc;AAIpBC,IAAAA,OAAO,EAAE;AAJW,GAAtB;AAMA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,UAAU,CAACE,WAAD,EAAcU,aAAd,CAApC;;AAEA,QAAMS,YAAY,GAAG,MAAOC,IAAP,IAAgB;AACnC,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMpB,WAAW,CAACqB,IAAZ,CAAiB,YAAjB,EAA+BF,IAA/B,CAAvB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACD,IAArB;AACAF,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAEvB;AADC,OAAD,CAAR;AAGD,KAND,CAME,OAAOwB,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAR,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAEtB,cADC;AAEPwB,QAAAA,OAAO,EAAEN,QAAQ,CAACD;AAFX,OAAD,CAAR;AAID;AACF,GAdD;;AAeA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLT,MAAAA,KAAK,EAAEM,KAAK,CAACN,KADR;AAELG,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAFP;AAGLC,MAAAA,IAAI,EAAEE,KAAK,CAACF,IAHP;AAILC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAJV;AAKLG,MAAAA;AALK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGV,KAAK,CAACmB,QART,CADF;AAYD,CApCD;;AAsCA,eAAepB,SAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport authContext from './authContext';\nimport authReducer from './authReducer';\nimport axiosClient from '../../config/axios';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_ERROR,\n  GET_USER,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  LOGOUT,\n} from '../../types/index';\nconst AuthState = (props) => {\n  const initialSatate = {\n    token: localStorage.getItem('token'),\n    auth: null,\n    user: null,\n    message: null,\n  };\n  const [state, dispatch] = useReducer(authReducer, initialSatate);\n\n  const userRegister = async (data) => {\n    try {\n      const response = await axiosClient.post('/api/users', data);\n      console.log(response.data);\n      dispatch({\n        type: REGISTER_SUCCESS,\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: REGISTER_ERROR,\n        payload: response.data,\n      });\n    }\n  };\n  return (\n    <authContext.Provider\n      value={{\n        token: state.token,\n        auth: state.auth,\n        user: state.user,\n        message: state.message,\n        userRegister,\n      }}>\n      {props.children}\n    </authContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}