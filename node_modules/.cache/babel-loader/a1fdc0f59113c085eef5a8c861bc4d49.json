{"ast":null,"code":"var _jsxFileName = \"/home/dereck/Udemy/React/MERN/taskmanager/client/src/context/projects/projectState.js\";\nimport React, { useReducer } from 'react';\nimport projectContext from './projectContext';\nimport projectReducer from './projectReducer';\nimport axiosClient from '../../config/axios';\nimport { NEW_PROJECT, GET_PROJECTS, ADD_PEOJECT, VALIDATE_FORM, CURRENT_PROJECT, DELETE_PROJECT, PROJECT_ERROR } from '../../types';\n\nconst ProjectState = props => {\n  const initialSatate = {\n    newProject: false,\n    projects: [],\n    error: false,\n    project: null,\n    message: null\n  };\n  const [state, dispatch] = useReducer(projectReducer, initialSatate);\n\n  const showForm = () => {\n    dispatch({\n      type: NEW_PROJECT\n    });\n  };\n\n  const getProjects = async () => {\n    try {\n      const response = await axiosClient.get('/api/projects'); // console.log(response.data);\n\n      dispatch({\n        type: GET_PROJECTS,\n        payload: response.data.projects\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const addProject = async project => {\n    try {\n      const response = await axiosClient.post('/api/projects', project); // console.log(response.data.project);\n\n      dispatch({\n        type: ADD_PEOJECT,\n        payload: response.data.project\n      });\n    } catch (error) {}\n  };\n\n  const onError = () => {\n    dispatch({\n      type: VALIDATE_FORM\n    });\n  };\n\n  const selectProject = projectId => {\n    dispatch({\n      type: CURRENT_PROJECT,\n      payload: projectId\n    });\n  };\n\n  const deleteProject = async projectId => {\n    try {\n      await axiosClient.delete(`/api/projects/${1}`);\n      dispatch({\n        type: DELETE_PROJECT,\n        payload: projectId\n      });\n    } catch (error) {\n      // console.log(error);\n      const alert = {\n        msg: 'Something went wrong',\n        category: 'alerta-error'\n      };\n      dispatch({\n        type: PROJECT_ERROR,\n        payload: alert\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(projectContext.Provider, {\n    value: {\n      newProject: state.newProject,\n      projects: state.projects,\n      error: state.error,\n      project: state.project,\n      message: state.message,\n      showForm,\n      getProjects,\n      addProject,\n      onError,\n      selectProject,\n      deleteProject\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ProjectState;","map":{"version":3,"sources":["/home/dereck/Udemy/React/MERN/taskmanager/client/src/context/projects/projectState.js"],"names":["React","useReducer","projectContext","projectReducer","axiosClient","NEW_PROJECT","GET_PROJECTS","ADD_PEOJECT","VALIDATE_FORM","CURRENT_PROJECT","DELETE_PROJECT","PROJECT_ERROR","ProjectState","props","initialSatate","newProject","projects","error","project","message","state","dispatch","showForm","type","getProjects","response","get","payload","data","console","log","addProject","post","onError","selectProject","projectId","deleteProject","delete","alert","msg","category","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport projectContext from './projectContext';\nimport projectReducer from './projectReducer';\nimport axiosClient from '../../config/axios';\nimport {\n  NEW_PROJECT,\n  GET_PROJECTS,\n  ADD_PEOJECT,\n  VALIDATE_FORM,\n  CURRENT_PROJECT,\n  DELETE_PROJECT,\n  PROJECT_ERROR,\n} from '../../types';\n\nconst ProjectState = (props) => {\n  const initialSatate = {\n    newProject: false,\n    projects: [],\n    error: false,\n    project: null,\n    message: null,\n  };\n\n  const [state, dispatch] = useReducer(projectReducer, initialSatate);\n\n  const showForm = () => {\n    dispatch({ type: NEW_PROJECT });\n  };\n\n  const getProjects = async () => {\n    try {\n      const response = await axiosClient.get('/api/projects');\n      // console.log(response.data);\n      dispatch({\n        type: GET_PROJECTS,\n        payload: response.data.projects,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const addProject = async (project) => {\n    try {\n      const response = await axiosClient.post('/api/projects', project);\n      // console.log(response.data.project);\n      dispatch({\n        type: ADD_PEOJECT,\n        payload: response.data.project,\n      });\n    } catch (error) {}\n  };\n\n  const onError = () => {\n    dispatch({\n      type: VALIDATE_FORM,\n    });\n  };\n\n  const selectProject = (projectId) => {\n    dispatch({\n      type: CURRENT_PROJECT,\n      payload: projectId,\n    });\n  };\n\n  const deleteProject = async (projectId) => {\n    try {\n      await axiosClient.delete(`/api/projects/${1}`);\n      dispatch({\n        type: DELETE_PROJECT,\n        payload: projectId,\n      });\n    } catch (error) {\n      // console.log(error);\n      const alert = {\n        msg: 'Something went wrong',\n        category: 'alerta-error',\n      };\n      dispatch({\n        type: PROJECT_ERROR,\n        payload: alert,\n      });\n    }\n  };\n  return (\n    <projectContext.Provider\n      value={{\n        newProject: state.newProject,\n        projects: state.projects,\n        error: state.error,\n        project: state.project,\n        message: state.message,\n        showForm,\n        getProjects,\n        addProject,\n        onError,\n        selectProject,\n        deleteProject,\n      }}>\n      {props.children}\n    </projectContext.Provider>\n  );\n};\n\nexport default ProjectState;\n"]},"metadata":{},"sourceType":"module"}