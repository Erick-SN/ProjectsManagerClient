{"ast":null,"code":"var _jsxFileName = \"/home/dereck/Udemy/React/MERN/taskmanager/client/src/components/projects/List.jsx\";\nimport React, { useContext, useEffect } from 'react';\nimport Project from './Project.jsx';\nimport projectContext from '../../context/projects/projectContext';\nimport alertContext from '../../context/alerts/alertContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst List = () => {\n  const projectsContext = useContext(projectContext);\n  const {\n    message,\n    projects,\n    getProjects\n  } = projectsContext;\n  const alertsContext = useContext(alertContext);\n  const {\n    alert,\n    showAlert\n  } = alertsContext;\n  useEffect(() => {\n    getProjects();\n  }, []);\n  if (projects.length === 0) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 37\n    }\n  }, \"NO projects created yet\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"listado-proyectos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TransitionGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, projects.map(project => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: project._id,\n    timeout: 200,\n    classNames: \"proyecto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Project, {\n    project: project,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default List;","map":{"version":3,"sources":["/home/dereck/Udemy/React/MERN/taskmanager/client/src/components/projects/List.jsx"],"names":["React","useContext","useEffect","Project","projectContext","alertContext","CSSTransition","TransitionGroup","List","projectsContext","message","projects","getProjects","alertsContext","alert","showAlert","length","map","project","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,eAAe,GAAGR,UAAU,CAACG,cAAD,CAAlC;AACA,QAAM;AAAEM,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAAqCH,eAA3C;AAEA,QAAMI,aAAa,GAAGZ,UAAU,CAACI,YAAD,CAAhC;AACA,QAAM;AAAES,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuBF,aAA7B;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAGA,MAAID,QAAQ,CAACK,MAAT,KAAoB,CAAxB,EAA2B,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AAE3B,sBACE,uDACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,QAAQ,CAACM,GAAT,CAAcC,OAAD,iBACZ,oBAAC,aAAD;AACE,IAAA,GAAG,EAAEA,OAAO,CAACC,GADf;AAEE,IAAA,OAAO,EAAE,GAFX;AAGE,IAAA,UAAU,EAAC,UAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAED,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADD,CADH,CADF,CADF,CADF;AAgBD,CA5BD;;AA8BA,eAAeV,IAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport Project from './Project.jsx';\nimport projectContext from '../../context/projects/projectContext';\nimport alertContext from '../../context/alerts/alertContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst List = () => {\n  const projectsContext = useContext(projectContext);\n  const { message, projects, getProjects } = projectsContext;\n\n  const alertsContext = useContext(alertContext);\n  const { alert, showAlert } = alertsContext;\n\n  useEffect(() => {\n    getProjects();\n  }, []);\n  if (projects.length === 0) return <p>NO projects created yet</p>;\n\n  return (\n    <>\n      <ul className='listado-proyectos'>\n        <TransitionGroup>\n          {projects.map((project) => (\n            <CSSTransition\n              key={project._id}\n              timeout={200}\n              classNames='proyecto'>\n              <Project project={project} />\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </ul>\n    </>\n  );\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}