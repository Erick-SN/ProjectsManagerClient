{"ast":null,"code":"var _jsxFileName = \"/home/dereck/Udemy/React/MERN/taskmanager/src/context/tasks/taskState.js\";\nimport React, { useReducer } from 'react';\nimport taskContext from './taskContex';\nimport taskReducer from './taskReducer';\nimport { PROJECT_TASKS } from '../../types';\n\nconst TaskState = props => {\n  const initialSatate = {\n    tasks: [{\n      name: 'Example',\n      state: true,\n      projectId: 1\n    }, {\n      name: 'Example 2',\n      state: false,\n      projectId: 2\n    }],\n    projectTask: null\n  };\n  const [state, dispatch] = useReducer(taskReducer, initialSatate); //Get task by a single projectId\n\n  const getTask = projectId => {\n    dispatch({\n      type: PROJECT_TASKS,\n      payload: projectId\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(taskContext.Provider, {\n    value: {\n      tasks: state.tasks,\n      getTask\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default TaskState;","map":{"version":3,"sources":["/home/dereck/Udemy/React/MERN/taskmanager/src/context/tasks/taskState.js"],"names":["React","useReducer","taskContext","taskReducer","PROJECT_TASKS","TaskState","props","initialSatate","tasks","name","state","projectId","projectTask","dispatch","getTask","type","payload","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SAASC,aAAT,QAA8B,aAA9B;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,aAAa,GAAG;AACpBC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,IAAI,EAAE,SADR;AAEEC,MAAAA,KAAK,EAAE,IAFT;AAGEC,MAAAA,SAAS,EAAE;AAHb,KADK,EAML;AACEF,MAAAA,IAAI,EAAE,WADR;AAEEC,MAAAA,KAAK,EAAE,KAFT;AAGEC,MAAAA,SAAS,EAAE;AAHb,KANK,CADa;AAapBC,IAAAA,WAAW,EAAE;AAbO,GAAtB;AAgBA,QAAM,CAACF,KAAD,EAAQG,QAAR,IAAoBZ,UAAU,CAACE,WAAD,EAAcI,aAAd,CAApC,CAjB2B,CAmB3B;;AAEA,QAAMO,OAAO,GAAIH,SAAD,IAAe;AAC7BE,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEX,aADC;AAEPY,MAAAA,OAAO,EAAEL;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLH,MAAAA,KAAK,EAAEE,KAAK,CAACF,KADR;AAELM,MAAAA;AAFK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGR,KAAK,CAACW,QALT,CADF;AASD,CArCD;;AAuCA,eAAeZ,SAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport taskContext from './taskContex';\nimport taskReducer from './taskReducer';\n\nimport { PROJECT_TASKS } from '../../types';\n\nconst TaskState = (props) => {\n  const initialSatate = {\n    tasks: [\n      {\n        name: 'Example',\n        state: true,\n        projectId: 1,\n      },\n      {\n        name: 'Example 2',\n        state: false,\n        projectId: 2,\n      },\n    ],\n    projectTask: null,\n  };\n\n  const [state, dispatch] = useReducer(taskReducer, initialSatate);\n\n  //Get task by a single projectId\n\n  const getTask = (projectId) => {\n    dispatch({\n      type: PROJECT_TASKS,\n      payload: projectId,\n    });\n  };\n\n  return (\n    <taskContext.Provider\n      value={{\n        tasks: state.tasks,\n        getTask,\n      }}>\n      {props.children}\n    </taskContext.Provider>\n  );\n};\n\nexport default TaskState;\n"]},"metadata":{},"sourceType":"module"}