{"ast":null,"code":"import { NEW_PROJECT, GET_PROJECTS, ADD_PEOJECT, VALIDATE_FORM, CURRENT_PROJECT, DELETE_PROJECT, PROJECT_ERROR } from '../../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case NEW_PROJECT:\n      return { ...state,\n        newProject: true\n      };\n\n    case GET_PROJECTS:\n      return { ...state,\n        projects: action.payload\n      };\n\n    case ADD_PEOJECT:\n      return { ...state,\n        projects: [...state.projects, action.payload],\n        newProject: false,\n        error: false\n      };\n\n    case VALIDATE_FORM:\n      return { ...state,\n        error: true\n      };\n\n    case CURRENT_PROJECT:\n      return { ...state,\n        project: state.projects.filter(project => project._id === action.payload)\n      };\n\n    case DELETE_PROJECT:\n      return { ...state,\n        projects: state.projects.filter(project => project._id !== action.payload),\n        project: null\n      };\n\n    case PROJECT_ERROR:\n      return { ...state,\n        message: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/dereck/Udemy/React/MERN/taskmanager/client/src/context/projects/projectReducer.js"],"names":["NEW_PROJECT","GET_PROJECTS","ADD_PEOJECT","VALIDATE_FORM","CURRENT_PROJECT","DELETE_PROJECT","PROJECT_ERROR","state","action","type","newProject","projects","payload","error","project","filter","_id","message"],"mappings":"AAAA,SACEA,WADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,eALF,EAMEC,cANF,EAOEC,aAPF,QAQO,aARP;AAUA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,WAAL;AACE,aAAO,EAAE,GAAGO,KAAL;AAAYG,QAAAA,UAAU,EAAE;AAAxB,OAAP;;AACF,SAAKT,YAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYI,QAAAA,QAAQ,EAAEH,MAAM,CAACI;AAA7B,OAAP;;AACF,SAAKV,WAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELI,QAAAA,QAAQ,EAAE,CAAC,GAAGJ,KAAK,CAACI,QAAV,EAAoBH,MAAM,CAACI,OAA3B,CAFL;AAGLF,QAAAA,UAAU,EAAE,KAHP;AAILG,QAAAA,KAAK,EAAE;AAJF,OAAP;;AAMF,SAAKV,aAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAYM,QAAAA,KAAK,EAAE;AAAnB,OAAP;;AACF,SAAKT,eAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELO,QAAAA,OAAO,EAAEP,KAAK,CAACI,QAAN,CAAeI,MAAf,CACND,OAAD,IAAaA,OAAO,CAACE,GAAR,KAAgBR,MAAM,CAACI,OAD7B;AAFJ,OAAP;;AAMF,SAAKP,cAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELI,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAAN,CAAeI,MAAf,CACPD,OAAD,IAAaA,OAAO,CAACE,GAAR,KAAgBR,MAAM,CAACI,OAD5B,CAFL;AAKLE,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF,SAAKR,aAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELU,QAAAA,OAAO,EAAET,MAAM,CAACI;AAFX,OAAP;;AAIF;AACE,aAAOL,KAAP;AAnCJ;AAqCD,CAtCD","sourcesContent":["import {\n  NEW_PROJECT,\n  GET_PROJECTS,\n  ADD_PEOJECT,\n  VALIDATE_FORM,\n  CURRENT_PROJECT,\n  DELETE_PROJECT,\n  PROJECT_ERROR,\n} from '../../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case NEW_PROJECT:\n      return { ...state, newProject: true };\n    case GET_PROJECTS:\n      return { ...state, projects: action.payload };\n    case ADD_PEOJECT:\n      return {\n        ...state,\n        projects: [...state.projects, action.payload],\n        newProject: false,\n        error: false,\n      };\n    case VALIDATE_FORM:\n      return { ...state, error: true };\n    case CURRENT_PROJECT:\n      return {\n        ...state,\n        project: state.projects.filter(\n          (project) => project._id === action.payload,\n        ),\n      };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project._id !== action.payload,\n        ),\n        project: null,\n      };\n    case PROJECT_ERROR:\n      return {\n        ...state,\n        message: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}