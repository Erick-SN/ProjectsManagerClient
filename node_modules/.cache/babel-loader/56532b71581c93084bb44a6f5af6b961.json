{"ast":null,"code":"import { PROJECT_TASKS, ADD_NEW_TASK, VALIDATE_FORM_TASK, DELETE_TASK } from '../../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case PROJECT_TASKS:\n      return { ...state,\n        projectTask: state.tasks.filter(task => task.projectId === action.payload)\n      };\n\n    case ADD_NEW_TASK:\n      return { ...state,\n        tasks: [action.payload, ...state.tasks],\n        error: false\n      };\n\n    case VALIDATE_FORM_TASK:\n      return { ...state,\n        error: true\n      };\n\n    case DELETE_TASK:\n      return { ...state,\n        tasks: state.tasks.filter(task => task.id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/dereck/Udemy/React/MERN/taskmanager/src/context/tasks/taskReducer.js"],"names":["PROJECT_TASKS","ADD_NEW_TASK","VALIDATE_FORM_TASK","DELETE_TASK","state","action","type","projectTask","tasks","filter","task","projectId","payload","error","id"],"mappings":"AAAA,SACEA,aADF,EAEEC,YAFF,EAGEC,kBAHF,EAIEC,WAJF,QAKO,aALP;AAOA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,aAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELG,QAAAA,WAAW,EAAEH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CACVC,IAAD,IAAUA,IAAI,CAACC,SAAL,KAAmBN,MAAM,CAACO,OADzB;AAFR,OAAP;;AAMF,SAAKX,YAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELI,QAAAA,KAAK,EAAE,CAACH,MAAM,CAACO,OAAR,EAAiB,GAAGR,KAAK,CAACI,KAA1B,CAFF;AAGLK,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAKX,kBAAL;AACE,aAAO,EAAE,GAAGE,KAAL;AAAYS,QAAAA,KAAK,EAAE;AAAnB,OAAP;;AACF,SAAKV,WAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELI,QAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACI,EAAL,KAAYT,MAAM,CAACO,OAAhD;AAFF,OAAP;;AAIF;AACE,aAAOR,KAAP;AAtBJ;AAwBD,CAzBD","sourcesContent":["import {\n  PROJECT_TASKS,\n  ADD_NEW_TASK,\n  VALIDATE_FORM_TASK,\n  DELETE_TASK,\n} from '../../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case PROJECT_TASKS:\n      return {\n        ...state,\n        projectTask: state.tasks.filter(\n          (task) => task.projectId === action.payload,\n        ),\n      };\n    case ADD_NEW_TASK:\n      return {\n        ...state,\n        tasks: [action.payload, ...state.tasks],\n        error: false,\n      };\n    case VALIDATE_FORM_TASK:\n      return { ...state, error: true };\n    case DELETE_TASK:\n      return {\n        ...state,\n        tasks: state.tasks.filter((task) => task.id !== action.payload),\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}